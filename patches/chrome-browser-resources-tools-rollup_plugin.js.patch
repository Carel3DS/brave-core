diff --git a/chrome/browser/resources/tools/rollup_plugin.js b/chrome/browser/resources/tools/rollup_plugin.js
index e1942718e76890c5051923fc647f488c1801ca95..c276588f6086137b6022d694fb00719f1dc9decc 100644
--- a/chrome/browser/resources/tools/rollup_plugin.js
+++ b/chrome/browser/resources/tools/rollup_plugin.js
@@ -72,13 +72,14 @@ export default function plugin(srcPath, genPath, rootPath, host, excludes) {
       }
 
       // Get path from ui/webui/resources
+      const braveResourcesUrl = 'chrome://brave-resources/'
       let pathFromResources = '';
       if (source.startsWith(chromeResourcesUrl)) {
         pathFromResources = source.slice(chromeResourcesUrl.length);
-      } else if (!!origin && origin.startsWith(resourcesSrcPath)) {
+      } else if (!!origin && origin.startsWith(resourcesSrcPath) && source.indexOf(braveResourcesUrl) === -1) {
         pathFromResources =
             combinePaths(relativePath(resourcesSrcPath, origin), source);
-      } else if (!!origin && origin.startsWith(resourcesGenPath)) {
+      } else if (!!origin && origin.startsWith(resourcesGenPath) && source.indexOf(braveResourcesUrl) === -1) {
         pathFromResources =
             combinePaths(relativePath(resourcesGenPath, origin), source);
       }
@@ -96,6 +97,37 @@ export default function plugin(srcPath, genPath, rootPath, host, excludes) {
             pathFromResources);
       }
 
+      const braveResourcesSrcPath = joinPaths(srcPath, 'brave/ui/webui/resources/')
+      const braveResourcesGenPath = joinPaths(genPath, 'brave/ui/webui/resources/')
+      let pathFromBraveResources = ''
+      if (source.startsWith(braveResourcesUrl)) {
+        pathFromBraveResources = source.slice(braveResourcesUrl.length)
+      } else if (!!origin && origin.startsWith(braveResourcesSrcPath)) {
+        pathFromBraveResources =
+            combinePaths(relativePath(braveResourcesSrcPath, origin), source);
+      } else if (!!origin && origin.startsWith(braveResourcesGenPath)) {
+        pathFromBraveResources =
+            combinePaths(relativePath(braveResourcesGenPath, origin), source);
+      }
+
+      // Add prefix (Brave specific)
+      if (pathFromBraveResources) {
+        const fullPath = chromeResourcesUrl + pathFromBraveResources;
+        if (excludes.includes(fullPath)) {
+          return {id: fullPath, external: true};
+        }
+        // cr.m.js, etc.
+        const filename = path.basename(source);
+        if (nonGeneratedFiles.includes(filename)) {
+          return joinPaths(resourcesSrcPath, pathFromBraveResources);
+        }
+        // JS compiled into gen directory
+        if (pathFromBraveResources.endsWith('.js')) {
+          return joinPaths(braveResourcesGenPath, pathFromBraveResources);
+        }
+        return joinPaths(braveResourcesSrcPath, pathFromBraveResources)
+      }
+
       // Not a resources or polymer path -> should be in the root directory.
       // Check if it should be excluded from the bundle.
       const fullSourcePath = combinePaths(origin, source);
